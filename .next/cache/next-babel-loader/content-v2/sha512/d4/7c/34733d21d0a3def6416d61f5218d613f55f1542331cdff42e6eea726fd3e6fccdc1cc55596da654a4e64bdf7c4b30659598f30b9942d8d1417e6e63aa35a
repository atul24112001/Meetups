{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\React\\\\section-23\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.meetups.image,\n    title: props.meetups.title,\n    address: props.meetups.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 13\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const response = await fetch(\"https://react-prep-99c9e-default-rtdb.firebaseio.com/meetups.json\");\n\n  if (!response.ok) {\n    throw new Error(\"Cant Fetch The Data!\");\n  }\n\n  const data = await response.json();\n  let loadedIds = [];\n\n  for (const key in data) {\n    loadedIds.push({\n      id: key\n    });\n  }\n\n  return {\n    fallback: false,\n    paths: [loadedIds.map(meet => {\n      return {\n        params: {\n          meetupId: meet.id\n        }\n      };\n    })]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const response = await fetch(\"https://react-prep-99c9e-default-rtdb.firebaseio.com/meetups.json\");\n\n  if (!response.ok) {\n    throw new Error(\"Cant Fetch The Data!\");\n  }\n\n  const data = await response.json();\n  let loadedMeetups = [];\n\n  for (const key in data) {\n    loadedMeetups.push(_objectSpread({\n      id: key\n    }, data[key]));\n  }\n\n  const loadedMeetup = loadedMeetups.find(meet => meet.id === meetupId);\n  return {\n    props: {\n      meetups: loadedMeetup\n    },\n    revalidate: 1\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/React/section-23/pages/[meetupId]/index.js"],"names":["MeetupDetails","DetailsPage","props","meetups","image","title","address","getStaticPaths","response","fetch","ok","Error","data","json","loadedIds","key","push","id","fallback","paths","map","meet","params","meetupId","getStaticProps","context","loadedMeetups","loadedMeetup","find","revalidate"],"mappings":";;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBAAQ,QAAC,aAAD;AACJ,IAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADjB;AAEJ,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFjB;AAGJ,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG;AAHnB;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAD,CAA5B;;AACA,MAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,QAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACpBE,IAAAA,SAAS,CAACE,IAAV,CAAe;AAAEC,MAAAA,EAAE,EAAEF;AAAN,KAAf;AACH;;AAED,SAAO;AACHG,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAE,CACHL,SAAS,CAACM,GAAV,CAAcC,IAAI,IAAI;AAClB,aACI;AACIC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAEF,IAAI,CAACJ;AADX;AADZ,OADJ;AAOH,KARD,CADG;AAFJ,GAAP;AAeH;AAED,OAAO,eAAeO,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEA,QAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAD,CAA5B;;AACA,MAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AAED,QAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,MAAIa,aAAa,GAAG,EAApB;;AACA,OAAK,MAAMX,GAAX,IAAkBH,IAAlB,EAAwB;AACpBc,IAAAA,aAAa,CAACV,IAAd;AAAqBC,MAAAA,EAAE,EAAEF;AAAzB,OAAiCH,IAAI,CAACG,GAAD,CAArC;AACH;;AAED,QAAMY,YAAY,GAAGD,aAAa,CAACE,IAAd,CAAmBP,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYM,QAAvC,CAArB;AAEA,SAAO;AACHrB,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEwB;AADN,KADJ;AAIHE,IAAAA,UAAU,EAAE;AAJT,GAAP;AAMH;AAED,eAAe5B,WAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\n\r\nfunction DetailsPage(props) {\r\n    return (<MeetupDetails\r\n        image={props.meetups.image}\r\n        title={props.meetups.title}\r\n        address={props.meetups.address}\r\n    />)\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const response = await fetch(\"https://react-prep-99c9e-default-rtdb.firebaseio.com/meetups.json\");\r\n    if (!response.ok) {\r\n        throw new Error(\"Cant Fetch The Data!\")\r\n    }\r\n\r\n    const data = await response.json();\r\n    let loadedIds = []\r\n    for (const key in data) {\r\n        loadedIds.push({ id: key })\r\n    }\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: [\r\n            loadedIds.map(meet => {\r\n                return (\r\n                    {\r\n                        params: {\r\n                            meetupId: meet.id\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n\r\n        ]\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const response = await fetch(\"https://react-prep-99c9e-default-rtdb.firebaseio.com/meetups.json\");\r\n    if (!response.ok) {\r\n        throw new Error(\"Cant Fetch The Data!\")\r\n    }\r\n\r\n    const data = await response.json();\r\n    let loadedMeetups = []\r\n    for (const key in data) {\r\n        loadedMeetups.push({ id: key, ...data[key] })\r\n    }\r\n\r\n    const loadedMeetup = loadedMeetups.find(meet => meet.id === meetupId);\r\n\r\n    return {\r\n        props: {\r\n            meetups: loadedMeetup\r\n        },\r\n        revalidate: 1\r\n    }\r\n}\r\n\r\nexport default DetailsPage;"]},"metadata":{},"sourceType":"module"}